#TouhouDanmakufu
#ScriptVersion[3]
#System["./../tricky_system/TrickySystem.dnh"]
#Title["Cole Spell 1"]
#Background["./NamelessPath.dnh"]
#Player["./../lib/TrickyPlayer/Tricky.dnh"]
//#BGM["./../sfx/bgm/bgm2.ogg"]

#include "./../lib/TerraShot1x/shot_const.dnh"
#include "./../lib/includes/BossIncludes.dnh"

@Event{
	alternative(GetEventType())
		case(EV_REQUEST_LIFE){ SetScriptResult(1000); }
		case(EV_REQUEST_TIMER){ SetScriptResult(999); }
		case(EV_REQUEST_SPELL_SCORE){ SetScriptResult(10000000); }
		case(EV_GAIN_SPELL){ AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE)); }
}

@Initialize{

	objEnemy = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objEnemy);
	Invuln(objEnemy, 360, 12.5, 15);
	PlayEnemyHitSound(objEnemy, 1);
	
	let Cole = GetCurrentScriptDirectory~"sprites/Cole_Sheet.png";
	ObjPrim_SetTexture(objEnemy, Cole); 
	ObjSprite2D_SetSourceRect(objEnemy, 0, 0, 128, 128);
	ascent(x in 0..4){ ObjAnim_AddFrameA1(objEnemy, ANIM_IDLE, 0, 128*x, 128, 128*x+128);}
	descent(x in 0..4){ ObjAnim_AddFrameA1(objEnemy, ANIM_IDLE, 0, 128*x, 128, 128*x+128);}
	ascent(x in 0..4){ObjAnim_AddFrameA1(objEnemy, ANIM_MOVE_RIGHT, 128, 128*x, 128*2, 128*x+128);}
	ObjAnim_AddFrameA1(objEnemy, ANIM_MOVEEND_RIGHT, 128, 128*3, 128*2, 128*4);
	ObjAnim_AddFrameA1(objEnemy, ANIM_MOVEEND_RIGHT, 128, 128*2, 128*2, 128*3);
	ObjAnim_AddFrameA1(objEnemy, ANIM_MOVEEND_RIGHT, 128, 128*1, 128*2, 128*2);
	ascent(x in 0..4){ObjAnim_AddFrameA1(objEnemy, ANIM_MOVE_LEFT, 128*2, 128*x, 128*3, 128*x+128);}
	ObjAnim_AddFrameA1(objEnemy, ANIM_MOVEEND_LEFT, 128*2, 128*3, 128*3, 128*4);
	ObjAnim_AddFrameA1(objEnemy, ANIM_MOVEEND_LEFT, 128*2, 128*2, 128*3, 128*3);
	ObjAnim_AddFrameA1(objEnemy, ANIM_MOVEEND_LEFT, 128*2, 128*1, 128*3, 128*2);
	ascent(x in 0..3){ObjAnim_AddFrameA1(objEnemy, ANIM_ATTACK, 128*4, 128*x, 128*5, 128*x+128);}
	descent(x in 0..3){ObjAnim_AddFrameA1(objEnemy, ANIM_ATTACKEND, 128*4, 128*x, 128*5, 128*x+128);}

	ObjAnim_SetSpeedA1(objEnemy, ANIM_IDLE, 8);
	ObjAnim_SetSpeedA1(objEnemy, ANIM_MOVE_LEFT, 6);
	ObjAnim_SetSpeedA1(objEnemy, ANIM_MOVE_RIGHT, 6);
	ObjAnim_SetSpeedA1(objEnemy, ANIM_ATTACK, 5);
	ObjAnim_SetLoopPointA1(objEnemy, ANIM_MOVE_RIGHT, 3);
	ObjAnim_SetLoopPointA1(objEnemy, ANIM_MOVE_LEFT, 3);
	ObjAnim_SetLoopPointA1(objEnemy, ANIM_ATTACK, 2);
	ObjAnim_StartAnimationA2(objEnemy, 0, 0);
	ObjSprite2D_SetDestCenter(objEnemy); 
	ObjRender_SetScaleXYZ(objEnemy, 0.75, 0.75, 1);
	
	SetAutoDeleteObject(true);
	delayedstart;
	End;
}

task End {
	let itemx = 0;
	let itemy = 0;
	while(ObjEnemy_GetInfo(objEnemy, INFO_LIFE) > 0) { yield; }
	
	SetShotAutoDeleteClip(32, 40, 32, 32);
	NotifyEventAll(EV_SPELLBGEND, 1);
	//DeleteShotWave(1,GetX,GetY,20);
	DeleteShotAll(TYPE_ALL,TYPE_ITEM);
	PlaySoundEffect("end",60,GetCenterX);
	CreateItems02(12, ITEM_POINT_S, GetEnemyX, GetEnemyY, 0, -50, 35, 35, 10000);
	SetForbidPlayerShot(false);
	SetPlayerSpeed(4.2, 1.7);
	SetCommonData("charm", false);
	Obj_Delete(objEnemy);
	CloseScript(GetOwnScriptID);
}

task delayedstart{
	
	ObjMove_SetDestAtFrame(objEnemy, GetCenterX, 120, 60);
	wait(60);
	
	ObjEnemyBossScene_StartSpell(objScene);
	ObjEnemyBossScene_SetSpellTimer(objScene, 60*(60));
	PlaySoundEffect("cardcall", 90, GetCenterX);
	
	let cole_cut = GetCurrentScriptDirectory~"sprites/Cole_Cutin.png";
	ObjCutin_SetSpellcardS4("Demon's Evocation &quot;An Evil Fiend's Burning Hands&quot;", cole_cut, "NAZRIN", "169", "30", "30");
	ObjCutin_LaunchS3("NAZRIN", "0", "Hard");
	NotifyEventAll(EV_SPELLBG, 1);
	
	wait(120);
	attack1;
	//attack2;
	SetShotAutoDeleteClip(32, 40, 32, 16);
}

task attack1{
	let count = 0;
	let count2 = 0;
	let count3 = 0;
	let variance = 0;
	let one = 1;
	let extraTime = 0;
	let offsets = [-90, -60, -30, -10, 10, 30, 60, 90];
	let originPoints = [[GetEnemyX-60, GetEnemyY+25], [GetEnemyX+60, GetEnemyY+25]];
	
	loop{
	
		TCharge01(GetEnemyX, GetEnemyY, 3, 45, 115, 0, 115, BLEND_ADD_ARGB, 25);
		//ObjAnim_SetAttackA1(objEnemy, true);
		PlaySoundEffect("charge2", 100, GetEnemyX);
		wait(45);
		originPoints = [[GetEnemyX-60, GetEnemyY+25], [GetEnemyX+60, GetEnemyY+25]];
		PlaySoundEffect("se_enep02", 70, GetEnemyX);
		PlaySoundEffect("fire2", 90, GetEnemyX);
		angle = 90;
		
		count = 0;
		count2 = 0;
	
		loop(70){
			PlaySoundEffect("shot5", 75, GetEnemyX);
			ascent(i in -5..6){
				CreateDNHShotA1(originPoints[0][0], originPoints[0][1], 3.75-(count2/25), 90+i*27.5+variance, [SHOT_FIREBALL_PURPLE, SHOT_FIREBALL_PINK][i%2], 10);
			}
			ascent(i in -5..6){
				CreateDNHShotA1(originPoints[1][0], originPoints[1][1], 3.75-(count2/25), 90+i*27.5+(variance), [SHOT_FIREBALL_PURPLE, SHOT_FIREBALL_PINK][i%2], 10);
			}
			if(GetPlayerY<GetEnemyY){ 
				ascent(j in -1..2){
					CreateDNHShotA2(GetEnemyX, GetEnemyY, 5, GetAngleToPlayer(objEnemy)+(j*15), -0.1, 2, SHOT_KNIFE_RED, 5); 
				}
			}
		wait(8);
		count++;
		if(count>10){ count2++; }
		variance = (sin(count2*24))*(20+20*sin(count2*1.5))*one;
		}
		//ObjAnim_SetAttackA1(objEnemy, false);
		one*=-1;
		wait(30);
		ExMove(objEnemy, GetPlayerX, rand(65, 75), 120+rand(-5, 5), 20, 3, 15);
		loop(3){
			/*
			PlaySoundEffect("shot3", 90, GetEnemyX); 
			loop(18){
				CreateDNHShotA2(GetEnemyX, GetEnemyY, 5, angle, -0.1, 2, [SHOT_BUBBLE_PURPLE, SHOT_BUBBLE_PINK][color%2], 15);
				angle+=360/18;
			}
			angle+=360/3*one;
			wait(20);
			*/
			color++;
		}
		color++;
		wait(60);
		yield;
	}	
}


task Spiral1(direction, firingDirection){
	let dir = firingDirection;
	let type = 0;
	let type2 = 0;
	ascent(i in 0..40){
		PlaySoundEffect("shot5", 60, GetEnemyX);
		loop(5){
			let obj = CreateDNHShotA2(GetEnemyX, GetEnemyY, 3.7666667-(i/15), dir, -0.0125, 0, SHOT_LARGE_PINK, 10);
			ManageCharmedBullets(obj, type2%2);
			dir+=360/5;
			type+=0.5;
			if(type%2==0){ type2++; }
		}
		
		wait(5);
		dir+=(21*direction)+rand(0.25, 0.25);
	}
}

task ManageCharmedBullets(obj, type){
	let changed = false;
	let time = 0;
	let scale = 1;
	let shotAngle = ObjMove_GetAngle(obj);
	let color = 0;
	while(!GetCommonData("charm", false)){ yield; }
	while(GetCommonData("charm", false)){ 
		if(changed==false){
			if(type==0){ ObjShot_SetGraphic(obj, SHOT_HEART_PINK); changed = true; }
		}
		yield;
	}
	if(!Obj_IsDeleted(obj)){
		if(type==0){ ObjMove_SetAcceleration(obj, 0.075); ObjMove_SetMaxSpeed(obj, 4); }
		else{
			wait(45);
			loop(3){
				if(!Obj_IsDeleted(obj)){ ObjShot_SetGraphic(obj, SHOT_LARGE_RED); }
				wait(10);
				if(!Obj_IsDeleted(obj)){ ObjShot_SetGraphic(obj, SHOT_LARGE_ORANGE); }
				wait(10);
			}
			PlaySoundEffect("se_enep00", 50, GetEnemyX);
			loop(20){
				time++;
				scale-=1/20;
				ObjRender_SetScaleXYZ(obj, scale);
				ObjShot_SetIntersectionScaleXY(obj, scale, scale);
				if(time%10==0){
					loop(3){
						let obj2 = CreateDNHShotA2(ObjMove_GetX(obj), ObjMove_GetY(obj), 2.5, shotAngle, -0.15, 0.75, [SHOT_RICE_RED, SHOT_RICE_ORANGE][color%2], 15);
						ManageExplosionBullets(obj2);
						shotAngle+=360/3;
					}
					color++;
					shotAngle+=360/3/2;
				}
				yield;
			}
		}
	}
}

task ManageExplosionBullets(obj){
	wait(420);
	if(!Obj_IsDeleted(obj)){
		ObjMove_SetAcceleration(obj, 0.01);
		ObjMove_SetMaxSpeed(obj, 2);
	}
}


task Charm(frames){ //change this to set player speed to 0?
	let magnitude = 1.15;
	SetCommonData("charm", true);
	SetPlayerSpeed(0, 0);
	SetForbidPlayerShot(true);
		ascent(i in 0..frames){
			ObjMove_SetPosition(GetPlayerObjectID, GetPlayerX-(magnitude*(sin(i*(180/frames)))*cos(GetAngleToPlayer(objEnemy))), GetPlayerY-(magnitude*(sin(i*(180/frames)))*sin(GetAngleToPlayer(objEnemy)))); //non-linear movement
			//ObjMove_SetPosition(GetPlayerObjectID, GetPlayerX-magnitude*cos(GetAngleToPlayer(objEnemyMain)), GetPlayerY-magnitude*sin(GetAngleToPlayer(objEnemyMain))); //linear movement
			yield;
		}
	SetForbidPlayerShot(false);
	SetPlayerSpeed(4.2, 1.7);
	SetCommonData("charm", false);
	PlaySoundEffect("ping", 90, GetCenterX);
	}

task CharmEffect(x,y) {
	let obj1 = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(obj1,40);
	ObjRender_SetBlendType(obj1,BLEND_ADD_RGB);
	ObjPrim_SetTexture(obj1, GetCurrentScriptDirectory~"sprites/Heart.png");
	ObjSprite2D_SetSourceRect(obj1,0,0,256,256);
	ObjSprite2D_SetDestCenter(obj1);

	let obj2 = ObjPrim_Create(OBJ_SPRITE_2D);
	Obj_SetRenderPriorityI(obj2,40);
	ObjRender_SetBlendType(obj2,BLEND_ADD_RGB);
	ObjPrim_SetTexture(obj2,GetCurrentScriptDirectory~"sprites/ConcentrationCircle.png");
	ObjSprite2D_SetSourceRect(obj2,0,0,256,256);
	ObjSprite2D_SetDestCenter(obj2);
	
	let maxscale1 = 2.25;
	let maxscale2 = 3.375;
	let scale1 = 0;
	let scale2 = 0;
	let alpha = 255*2;

	ObjRender_SetPosition(obj1,x,y+10,0);
	ObjRender_SetPosition(obj2,x,y,0);

	ascent(i in 0..60) {
		scale1 = maxscale1*sin(90*i/60);
		scale2 = maxscale2*sin(90*i/60);
		alpha-=(255*2)/60;
		ObjRender_SetScaleXYZ(obj1,scale1,scale1,scale1);
		ObjRender_SetColor(obj1,alpha,0,alpha);
		ObjRender_SetScaleXYZ(obj2,scale2,scale2,scale2);
		ObjRender_SetColor(obj2,alpha,0,alpha);
		yield;
	}
}