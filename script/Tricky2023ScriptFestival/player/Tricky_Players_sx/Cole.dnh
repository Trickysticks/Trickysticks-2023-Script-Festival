#東方弾幕風[Player]
#ScriptVersion[3]	
#ID["ColeSnY"]
#Title["Cole"]
#Text["Cole player script[r]Unfocused Speed 4.5[r]Focused Speed 2.3[r]Lyos's Gift to Trickee.[r]Player Script by Syoudre.[r]Art by Lobby.[r]Sprite by Mr. Gaberson."]
#Image["./texture/Cole_Portrait.png"]
#include "./global_lib.txt"
#include "./global_functions.txt"

optDistance = [48, 28];
float tr = optDistance[0] - optDistance[1];
currDist = optDistance[0];
sz = 1;
optTex = optTex ~ "Cole_Familliar.png";

@Initialize{
	SetPlayerSpeed(4.5,2.3);
	SetPlayerDownStateFrame(60);
	SetPlayerRebirthFrame(20);
	SetPlayerAutoItemCollectLine(150);
	SetPlayerClip(0+3, 0+12, 384-3, 448-8);
	SetPlayerLife(2);
	SetPlayerSpell(3);
	SetPlayerItemScope(48);
	
	LoadPlayerShotData(shotPath); 
	
	ObjPlayer_AddIntersectionCircleA1(objPlayer, 0, 0, 1, 32); 
	
	ObjPrim_SetTexture(objPlayer, CSD ~ "./texture/ColeSprite.png");
	ObjRender_SetTextureFilterMag(objPlayer, FILTER_POINT);
	
	TImage();
	TShot();
	TMagicCircle();
	renderHitbox();
	
	ascent(i in -2..3){
		if(i != 0){ TOption(i); }
	}
}

@MainLoop{
	isFocus = (VKeyPressed(VK_SLOWMOVE) && GetPlayerState() != STATE_DOWN) ? true : false;
	FindVictim = GetAllEnemyID;

	yield;
}

@Event{
	alternative(GetEventType())
	case(EV_GRAZE) 
	{
		NotifyEvent(SFXSCR, EV_PLAY_SFX, 3);
		AddScore(100);
		if (curr_graze_particles < MAX_GRAZE_PARTICLES) {
			CreateGrazeParticle();
		}
	}
	case(EV_REQUEST_SPELL)
	{
		if(GetPlayerSpell > 0)
		{
			SetPlayerSpell(GetPlayerSpell-1);
			SetScriptResult(true);
			TSpell();
		}
		else{
			SetScriptResult(false);
		}
	}
	case(EV_HIT)
	{
		//被弾
		
		NotifyEvent(SFXSCR, EV_PLAY_SFX, 2);
		//PlaySoundEffect("DIE");
		TExplosion();
		
	}
	case(EV_PLAYER_SHOOTDOWN)
	{
		//被弾
		SetForbidPlayerShot(true);
		
	}
	case(EV_PLAYER_REBIRTH)
	{
		//復帰
		SetPlayerSpell(3);
		SetPlayerInvincibilityFrame(180);
		SetForbidPlayerShot(false);
	}
	case(EV_DELETE_SHOT_PLAYER)
	{
		CreateDeleteParticle(GetEventArgument(0), GetEventArgument(2));
	}
}



task TShot(){
	int shotFrame = 0;
	loop{
		if(VKeyPressed(VK_SHOT) && IsPermitPlayerShot()){
			if(isFocus && shotFrame % 3 == 0){
				NotifyEvent(SFXSCR, EV_PLAY_SFX, 10);
				ascent(i in -1..2){
					CreatePlayerShotA1(GetPlayerX() + 10*i, GetPlayerY() - 12, 13, 270+5*i, 5, 1, 101);
				}
			}
			else if (!isFocus && shotFrame % 3 == 0){
				NotifyEvent(SFXSCR, EV_PLAY_SFX, 10);
				ascent(i in -1..2){
					CreatePlayerShotA1(GetPlayerX(), GetPlayerY() - 12, 13, 270+8*i, 5, 1, 102);
				}
			}
			shotFrame++;
		}
		else{
			shotFrame = 0;
		}
		yield;
	}
}

task optionShot(int obj, int dir){
	int shotFrame = 0;
	float pX = 0; float pY = 0;
	int abs = absolute(dir);
	loop{
		pX = ObjRender_GetX(obj); 
		pY = ObjRender_GetY(obj);
		if(VKeyPressed(VK_SHOT) && IsPermitPlayerShot()){
			if (isFocus && shotFrame % 60 == abs*30-1){
				Vines(pX, pY);
			}
			else if(!isFocus && shotFrame % 6 == 3*abs-1){
				ascent(j in -1..2){
					int sh = CreatePlayerShotA1(pX, pY, rand(7.8, 8.2), 270+dir*8 + 15*j, 10, 1, 106);
					ObjRender_SetAngleZ(sh, rand(0, 360));
					Grower(sh);
				}
			}
			shotFrame++;
		}
		else{
			shotFrame = 0;
		}
		yield;
	}
}

task Vines(float x, float y){
	float angl = rand(268, 272);
	float pX = x;
	float pY = y-16;
	float parent = CreatePlayerShotA1(pX, pY, 23.5/2, angl, 0, 999, 2000); //dummy
	//Home(parent, 0, 0.4, 30);
	Homer(parent, 30,0.1, 23.5/2, 0, 0, 600, 0.1, 0, 0);
	ObjShot_SetDeleteFrame(parent, 50);
	ascent(i in 0..25){
		if(Obj_IsDeleted(parent) || !IsPermitPlayerShot()){break;}
		int sh = CreatePlayerShotA1(ObjMove_GetX(parent), ObjMove_GetY(parent), 0, ObjMove_GetAngle(parent), 0.65, 9999, rand(103, 106));
		ObjShot_SetDeleteFrame(sh, 45);
		wait(2);
	}
}

task TSpell(){
	int objManage = GetSpellManageObject();
	SetPlayerInvincibilityFrame(360);
	NotifyEvent(SFXSCR, EV_PLAY_SFX, 12);
	NotifyEvent(SFXSCR, EV_PLAY_SFX, 6);
	if(isFocus){
		SpellCardCutIn(spellcardNames[1][1]);
		float ran = rand(0, 360);
		float pX = GetPlayerX();
		float pY = GetPlayerY();
		ascent(i in 0..120){
			ascent(j in 0..5){
				float ang = j * 72 + i * 11.1 *n;
				int sh = CreatePlayerShotA1(pX + i * 3 * cos(ang), pY + i * 3 * sin(ang), 0, 0, 1, 999, 111); 
				ObjShot_SetEraseShot(sh, true);
				ObjShot_SetSpellFactor(sh, true);
				if(i % 5 == 0){
					ObjShot_SetGraphic(sh, 110);
					MakePetals(sh, i);
				}
				else{
					ObjMove_AddPatternA2(sh, 30+i/3, 0, ang, 9/120, 9, 0);
				}
				Grower(sh);
			}
			if(i % 2 == 0) {wait(1);}
		}
		n*=-1;
	}
	else{
		SpellCardCutIn(spellcardNames[1][0]);
		int missile = CreatePlayerShotA1(GetPlayerX(), GetPlayerY(), 0, -90, 0, 1, 107); //dummy
		ObjMove_AddPatternA2(missile, 0, 3, -90, 9/120, 12, 0);
		Grower(missile);
		Homer(missile, 60, 0.6, 3, 9/120, 12, 600, 0.6, 10, 0);
		float pX = 0; float pY = 0;
		loop(120){
			if(Obj_IsDeleted(missile)){ break;}
			pX = ObjMove_GetX(missile);
			pY = ObjMove_GetY(missile);
			yield;
		}
		NotifyEvent(SFXSCR, EV_PLAY_SFX, 1);
		NotifyEvent(SFXSCR, EV_PLAY_SFX, 7);
		ascent(i in 0..8){
			int off = min(i, 1);
			Boom(pX + rand(-96, 96)*off, pY + rand(-96, 96)*off, 20-12*off, 11-2.5*off, off);
		}	
		loop(240){
			float speed = rand(1, 5);
			float angl = rand(0, 360);
			float speedx = speed * cos(angl);
			float speedy = speed * sin(angl)-3;
			int sh = CreateShotB2(pX, pY, speedx, speedy, -speedx/600, 0.05, 0, 6, 108, 0);
			
			ObjShot_SetSpinAngularVelocity(sh, rand(-5, 5));
			ObjShot_SetEraseShot(sh, true);
			ObjShot_SetSpellFactor(sh, true);
			ObjShot_SetDamage(sh, 2);
			ObjRender_SetAngleZ(sh, rand(0, 360));
			ObjShot_SetPenetration(sh, 999);
			ObjShot_SetDeleteFrame(sh, rand(240, 480));
			ObjShot_SetAutoDelete(sh, false);
		}
		Quake(60, 15);
		wait(60);
		Quake(60, 10);
		wait(60);
		Quake(20, 5);
		wait(20);
		Quake(20, 3);
		wait(20);
		Quake(20, 1);
		wait(20);
	}
	Obj_Delete(objManage);
}

task MakePetals(obj, id){
	float pX = ObjMove_GetX(obj);
	float pY = ObjMove_GetY(obj);
	float ran = rand(0, 360);
	float spd = 12-id/15;
	wait(30);
	Quake(5, 3);
	NotifyEvent(SFXSCR, EV_PLAY_SFX, 11);
	NotifyEvent(SFXSCR, EV_PLAY_SFX, 17);
	ascent(i in 0..5){
		Darkness(pX, pY, 3+i/3);
		wait(6);
	}
	ascent(i in 0..5){
		int sh = CreatePlayerShotA1(pX, pY, 3, ran+i*72, 1.8, 999, 112); //dummy
		ObjShot_SetEraseShot(sh, true);
		ObjShot_SetSpellFactor(sh, true);
		Grower(sh);
		ObjMove_AddPatternA2(sh, 0, -2.4, NO_CHANGE, 2.4/10, 0, 0);
		ObjMove_AddPatternA2(sh, 90-id/2, 0, NO_CHANGE, spd/120, spd, 0);
	}
	ObjShot_FadeDelete(obj);
}

task Darkness(x, y, sz){
	int sh = CreateShotA1(x, y, 0, 0, 9, 0);
	
	ObjShot_SetDamage(sh, 3);
	ObjShot_SetPenetration(sh, 9999);
	
	ObjRender_SetBlendType(sh, BLEND_SUBTRACT);
	
	ObjRender_SetScaleXYZ(sh, sz);
	ObjRender_SetAngleXYZ(sh, rand(0, 360), rand(0, 360), rand(0, 360));
	float sca = rand(1, 4);
	
	ObjRender_SetAlpha(sh, 0);
	
	ascent(i in 1..61){
		float sc = Interpolate_Linear(1, 0, i/60);
		ObjRender_SetScaleXYZ(sh, sz*sc, sca*sc, 0);
		ObjRender_SetAlpha(sh, 128-128*sc);
		yield;
	}
	Obj_Delete(sh);
}

task Boom(x, y, sz, pow, type){
	int sh = CreateShotA1(x, y, 0, 0, 109, 0);
	
	ObjShot_SetDamage(sh, pow);
	ObjShot_SetPenetration(sh, 9999);
	ObjRender_SetBlendType(sh, BLEND_ADD_ARGB);
	
	ObjShot_SetAutoDelete(sh, false);
	ObjShot_SetEraseShot(sh, true);
	ObjShot_SetSpellFactor(sh, true);
	
	if(type == 1){ObjRender_SetAngleXYZ(sh, rand(0, 360), rand(0, 360), rand(0, 360));}
	float sca = rand(1, 4);
	
	ascent(i in 1..31){
		float sc = Interpolate_Linear(0, 1, i/30);
		ObjRender_SetScaleXYZ(sh, sz*sc, (type == 1 ? sca : sz)*sc, sz*sc);
		ObjRender_SetAlpha(sh, 216-216*sc);
		ObjShot_SetIntersectionCircleA1(sh, sz*sc*24);
		yield;
	}
	Obj_Delete(sh);
}
